// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using UIKit;
using System.Linq;

namespace PullToRefresh11
{
    public partial class CitiesTableViewController : UITableViewController
    {
        #region Variables
        Dictionary<string, List<string>> cities;
        string[] keys;
        UIRefreshControl refreshControl;
        #endregion
        #region Contructors
        public CitiesTableViewController(IntPtr handle) : base(handle)
        {

        }
        #endregion
        #region Controllers life Cycle
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            InitializeComponents();

        }


        #endregion
        #region User Interactions
        void RefreshControl_ValueChanged(object sender, EventArgs e)
        {
            //Aqui se descargan los datos de internet
            //refreshControl.EndRefreshing();
            CitiesManager.SharedInstance.FetchCities();

        }
        #endregion
        #region TableView DataSource
        public override nint NumberOfSections(UITableView tableView)
        {
            return keys.Length;
        }
        public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            var cell = tableView.DequeueReusableCell("BasicTableViewCell", indexPath);
            cell.TextLabel.Text = cities[keys[indexPath.Section]][indexPath.Row];
            return cell;
        }
        public override nint RowsInSection(UITableView tableView, nint section)
        {
            return cities[keys[section]].Count;
        }
        public override String[] SectionIndexTitles(UITableView tableView)
        {
            return keys;
        }
        public override string TitleForHeader(UITableView tableView, nint section)
        {
            return keys[section];
        }
        #endregion
        #region Cities Manager Events
        void CitiesManger_CitiesFetched(object sender, PullToRefresh11.CitiesEventArgs e)
        {
            cities = e.Cities;
            InvokeOnMainThread(() =>
            {
                refreshControl.EndRefreshing();

            });
        }

        void CitiesManager_FetchCitiesFailed(object sender, EventArgs e)
        {
            Console.WriteLine("Somehting failed");
            InvokeOnMainThread(() => 
            {
                /*//Create Alert
                var exceptionAlert = UIAlertController.Create("Error", e.ToString(), UIAlertControllerStyle.Alert);

                //Add Action
                exceptionAlert.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));

                // Present Alert
                PresentViewController(exceptionAlert, true, null);*/
                refreshControl.EndRefreshing();   
            });
        }

        void SharedInstance_ExceptionCities(object sender, PullToRefresh11.ExceptionCitiesArgs e)
        {
            InvokeOnMainThread(() =>
            {
                //Create Alert
                var exceptionAlert = UIAlertController.Create("Error", e.ex.Message, UIAlertControllerStyle.Alert);

                //Add Action
                exceptionAlert.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));

                // Present Alert
                PresentViewController(exceptionAlert, true, null);
                refreshControl.EndRefreshing();
            });
        }

        #endregion
        #region Internal Functionality
        void InitializeComponents()
        {
            CitiesManager.SharedInstance.CitiesFetched += CitiesManger_CitiesFetched;
            CitiesManager.SharedInstance.FetchCitiesFailed += CitiesManager_FetchCitiesFailed;
            CitiesManager.SharedInstance.ExceptionCitiesA += SharedInstance_ExceptionCities;
                         
            cities = CitiesManager.SharedInstance.GetDefaultCities();
            keys = cities.Keys.ToArray();
            refreshControl = new UIRefreshControl();
            refreshControl.ValueChanged += RefreshControl_ValueChanged;
            TableView.RefreshControl = refreshControl;


        }
        #endregion


    }
}
